{"version":3,"sources":["components/api.js","components/RepoList/RepoList.jsx","components/UserDetails/UserDetails.jsx","components/RepoCount.jsx","components/UsersList/UsersList.jsx","App.js","reportWebVitals.js","index.js"],"names":["request","url","a","fetch","method","headers","Authorization","process","response","ok","Error","statusText","json","serverResponse","items","RepoList","repos","userLogin","useState","queryRepo","setInputRepo","filteredRepos","filter","repo","name","includes","className","type","placeholder","value","onChange","event","target","map","onClick","window","open","forks_count","stargazers_count","id","UserDetails","isUserSelected","hideUserDetails","loading","setLoading","user","setUser","setRepos","useEffect","loadedUser","loadedRepos","loadUser","role","src","avatar_url","alt","login","email","location","created_at","slice","followers","following","bio","RepoCount","getUser","public_repos","propTypes","PropTypes","string","isRequired","UsersList","selectUser","queryUser","setInputUser","users","userError","setUserError","error","setError","length","class","require","config","App","setUsers","setUserLogin","setUserSelected","loadedUsers","getUsers","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c846a1ca.chunk.js","sourcesContent":["\nconst BASE_URL = 'https://api.github.com';\nconst { REACT_APP_GH_TOKEN } = process.env;\n\nexport const request = async(url) => {\n    const response = await fetch(`${BASE_URL}${url}`, {\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${REACT_APP_GH_TOKEN}`,\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(response.statusText);\n    }\n\n    const serverResponse = await response.json();\n\n    return serverResponse.items || serverResponse;\n\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport \"./RepoList.css\";\n\nexport const RepoList = ({ repos, userLogin }) => {\n  const [queryRepo, setInputRepo] = useState('');\n  const filteredRepos = repos.filter(repo => repo.name.includes(queryRepo));\n  const handleQueryRepo = (event) => {\n    setInputRepo(event.target.value);\n  };\n\n  return (\n    <>\n      <div>\n        <div className=\"input-group mb-3\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            name=\"queryRepo\"\n            placeholder=\"Search for Repos\"\n            value={queryRepo}\n            onChange={handleQueryRepo}\n            aria-label=\"Recipient's username\"\n            aria-describedby=\"basic-addon2\"\n          />\n        </div>\n\n        <div className=\"container\">\n          <h3>Repo List</h3>\n          {filteredRepos.map(repo => (\n            <div\n              className='card mb-3 repo-block'\n              key={repo.id}\n            >\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                onClick={\n                  // eslint-disable-next-line max-len\n                  () => window.open(`https://github.com/${userLogin}/${repo.name}`, '_blank')\n                }\n              >\n                <div className=\"row no-gutters field\">\n                  <div className=\"col-md-4 p-3\">\n                    <h5 className=\"card-title\">\n                      {`${repo.name}`}\n                    </h5>\n                  </div>\n                  <div className=\"col-md-8\">\n                    <div className=\"card-body\">\n                      <p className=\"card-text\">\n                        {`Forks: ${repo.forks_count}`}\n                      </p>\n                      <p className=\"card-text\">\n                        {`Stars: ${repo.stargazers_count}`}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </button>\n            </div>\n          ))\n          }\n        </div>\n      </div>\n    </>\n  );\n};\n\nRepoList.propTypes = {\n  repos: PropTypes.arrayOf(\n    PropTypes.object.isRequired,\n  ).isRequired,\n  userLogin: PropTypes.string.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport { request } from '../api';\nimport { RepoList } from '../RepoList/RepoList';\nimport \"./UserDetails.css\";\n\nexport const UserDetails = ({\n  userLogin,\n  isUserSelected,\n  hideUserDetails,\n  loading,\n  setLoading\n}) => {\n  const [user, setUser] = useState({});\n  const [repos, setRepos] = useState([]);\n\n  useEffect(() => {\n    const loadUser = async() => {\n      try {\n        const loadedUser = await request(`/users/${userLogin}`);\n        setUser(loadedUser);\n      } catch {\n\n      } finally {\n        setLoading(false);\n      }\n\n      const loadedRepos = await request(`/users/${userLogin}/repos`);\n\n      setRepos(loadedRepos);\n\n    };\n\n    loadUser();\n  }, [userLogin, setLoading]);\n\n  if (loading) {\n    return <div className=\"d-flex align-items-center\">\n    <strong>Loading...</strong>\n    <div className=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\"></div>\n  </div>;\n  }\n\n    return (\n      <>\n        {!isUserSelected\n          ? null\n          : (\n            <>\n              <div className=\"container details\">\n                  <div className=\"row no-gutters\">\n                    <div className=\"col-md-4\">\n                      <img\n                        src={user.avatar_url}\n                        className=\"card-img\"\n                        alt=\"avatar\"\n                      />\n                    </div>\n                    <div className=\"col-md-8\">\n                      <div className=\"card-body\">\n                        <h5 className=\"card-title\">{user.login}</h5>\n                        <p className=\"card-text\">\n                          {user.email && `email: ${user.email}`}\n                        </p>\n                        <p className=\"card-text\">\n                          {user.location && `location: ${user.location}`}\n                        </p>\n                        <p className=\"card-text\">\n                          {user.created_at\n                          && `Join Date: ${user.created_at.slice(0, 10)}`}\n                        </p>\n                        <p className=\"card-text\">\n                          {user.followers && `${user.followers} Followers`}\n                        </p>\n                        <p className=\"card-text\">\n                          {user.location && `Following ${user.following}`}\n                        </p>\n                        <div>\n                          <p className=\"card-text\">\n                            <small className=\"text-muted\">\n                              {user.bio && `User's biography: ${user.bio}`}\n                            </small>\n                          </p>\n                          <button\n                            type=\"button\"\n                            className=\"btn btn-danger\"\n                            onClick={hideUserDetails}\n                          >\n                            Hide Details\n                          </button>\n                        </div>\n                      </div>\n                  </div>\n                </div>\n              </div>\n              <div>\n                <RepoList\n                  repos={repos}\n                  userLogin={userLogin}\n                  isUserSelected={isUserSelected}\n                />\n              </div>\n            </>\n          )\n        }\n      </>\n    );\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { request } from './api';\n\nexport const RepoCount = ({ name }) => {\n  const [user, setUser] = useState({});\n\n  useEffect(() => {\n    const loadUser = async() => {\n        const getUser = await request(`/users/${name}`);\n\n        setUser(getUser);\n    }\n\n    loadUser();\n  }, [name]);\n\n  return (\n    <>\n      Repos: {user.public_repos}\n    </>\n  );\n};\n\nRepoCount.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { request } from '../api';\nimport { RepoCount } from '../RepoCount';\nimport \"./UsersList.css\";\n\nexport const UsersList = ({\n  selectUser,\n  hideUserDetails,\n}) => {\n  const [queryUser, setInputUser] = useState('');\n  const [users, setUser] = useState([]);\n  const [userError, setUserError] = useState(null);\n  const [error, setError] = useState(true);\n  const handleQueryUser = (event) => {\n    setInputUser(event.target.value);\n    hideUserDetails();\n  };\n\n  useEffect(() => {\n    if (queryUser.length > 0) {\n      const loadUser = async() => {\n        try {\n          const loadedUser = await request(`/search/users?q=${queryUser}`);\n          setUser(loadedUser);\n          setError(true);\n        }\n        catch (errorUser) {\n          setUserError(`Loading error: User is not found`);\n          setError(false);\n        }\n\n      };\n  \n      loadUser();\n    }\n\n  }, [queryUser]);\n\n  return (\n    <>\n      <input\n        type=\"text\"\n        className=\"form-control input\"\n        name=\"queryUser\"\n        placeholder=\"Search for Users\"\n        value={queryUser}\n        onChange={handleQueryUser}\n        aria-label=\"Recipient's username\"\n        aria-describedby=\"basic-addon2\"\n      />\n        {(!error)\n      ? <div className=\"alert\" role=\"alert\">\n        <h1>{userError}</h1>\n      </div>\n\n      : <div className=\"row\">\n        <div className=\"col-sm-12\">\n              {users.map(user => (\n                <div className=\"card mb-3\" key={user.login}>\n                  <div className=\"row g-0\">\n                    <div className=\"col-md-3\">\n                      <img src={user.avatar_url} class=\"img-fluid rounded-start\" alt=\"avatar\"></img>\n                    </div>\n                    <div className=\"col-md-8\">\n                      <div className=\"card-body\">\n                        <h5 className=\"card-title\">{user.login}</h5>\n                          <p className=\"card-text\">\n                            <RepoCount name={user.login} />\n                          </p>\n                          <button className=\"btn btn-primary\" onClick={() => selectUser(user.login)}>Details</button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              ))}\n        </div>\n      </div>\n}\n    </>\n  );\n};\n\nUsersList.propTypes = {\n  users: PropTypes.arrayOf(\n    PropTypes.object.isRequired,\n  ).isRequired,\n  selectUser: PropTypes.func.isRequired,\n  hideUserDetails: PropTypes.func.isRequired,\n  isUserSelected: PropTypes.bool.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport { request } from './components/api';\nimport './App.css';\nimport { UserDetails } from './components/UserDetails/UserDetails';\nimport { UsersList } from './components/UsersList/UsersList';\nrequire('dotenv').config();\n\nconst App = () => {\n  const [users, setUsers] = useState([]);\n  const [userLogin, setUserLogin] = useState('');\n  const [isUserSelected, setUserSelected] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const getUsers = async() => {\n        const loadedUsers = await request('/users');\n        setUsers(loadedUsers);\n    };\n    getUsers();\n  }, []);\n\n  const selectUser = (userLogin) => {\n    setUserLogin(userLogin);\n    setUserSelected(true);\n    setLoading(true);\n  };\n\n  const hideUserDetails = () => {\n    setUserLogin('');\n    setUserSelected(false);\n  };\n\n  return (\n    <div className=\"app container\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <h1>\n            Users list\n          </h1>\n          {!users.length\n            ? (\n              <div className=\"d-flex align-items-center\">\n                <strong>Loading...</strong>\n                <div className=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\"></div>\n              </div>\n            )\n            : (\n              <UsersList\n                users={users}\n                setUsers={setUsers}\n                selectUser={selectUser}\n                hideUserDetails={hideUserDetails}\n              />\n            )}\n          </div>\n          <div className=\"col\">\n            {!isUserSelected\n              ? null\n              : (\n                <UserDetails\n                  userLogin={userLogin}\n                  isUserSelected={isUserSelected}\n                  hideUserDetails={hideUserDetails}\n                  setLoading={setLoading}\n                  loading={loading}\n                />\n              )}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nrequire('dotenv').config();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}