{"version":3,"sources":["components/api.js","components/RepoList/RepoList.jsx","components/UserDetails/UserDetails.jsx","components/RepoCount.jsx","components/UsersList/UsersList.jsx","App.js","reportWebVitals.js","index.js"],"names":["request","endpoint","fetch","method","headers","Authorization","then","response","ok","Error","status","statusText","json","RepoList","repos","userLogin","useState","queryRepo","setInputRepo","filteredRepos","filter","repo","name","includes","className","type","placeholder","value","onChange","event","target","map","onClick","window","open","forks_count","stargazers_count","id","UserDetails","isUserSelected","hideUserDetails","user","setUser","setRepos","useEffect","a","loadedUser","loadedRepos","loadUser","length","src","avatar_url","alt","login","email","location","created_at","slice","followers","following","bio","RepoCount","getUser","public_repos","propTypes","PropTypes","string","isRequired","UsersList","users","selectUser","queryUser","setInputUser","filteredUsers","class","App","setUsers","setUserLogin","setUserSelected","loadedUsers","getUsers","role","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.514e75b7.chunk.js","sourcesContent":["\nconst BASE_URL = 'https://api.github.com';\n\nexport const request = endpoint => fetch(`${BASE_URL}${endpoint}`, {\n    method: 'GET',\n    headers: {\n      Authorization: 'TOKEN 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',\n    },\n    })\n  .then((response) => {\n    if (!response.ok) {\n      throw new Error(`${response.status} - ${response.statusText}`);\n    }\n\n    return response.json();\n  });\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport \"./RepoList.css\";\n\nexport const RepoList = ({ repos, userLogin }) => {\n  const [queryRepo, setInputRepo] = useState('');\n  const filteredRepos = repos.filter(repo => repo.name.includes(queryRepo));\n  const handleQueryRepo = (event) => {\n    setInputRepo(event.target.value);\n  };\n\n  return (\n    <>\n      <div>\n        <div className=\"input-group mb-3\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            name=\"queryRepo\"\n            placeholder=\"Search for Repos\"\n            value={queryRepo}\n            onChange={handleQueryRepo}\n            aria-label=\"Recipient's username\"\n            aria-describedby=\"basic-addon2\"\n          />\n        </div>\n\n        <div className=\"container\">\n          <h3>Repo List</h3>\n          {filteredRepos.map(repo => (\n            <div\n              className='card mb-3 repo-block'\n              key={repo.id}\n            >\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                onClick={\n                  // eslint-disable-next-line max-len\n                  () => window.open(`https://github.com/${userLogin}/${repo.name}`, '_blank')\n                }\n              >\n                <div className=\"row no-gutters field\">\n                  <div className=\"col-md-4 p-3\">\n                    <h5 className=\"card-title\">\n                      {`${repo.name}`}\n                    </h5>\n                  </div>\n                  <div className=\"col-md-8\">\n                    <div className=\"card-body\">\n                      <p className=\"card-text\">\n                        {`Forks: ${repo.forks_count}`}\n                      </p>\n                      <p className=\"card-text\">\n                        {`Stars: ${repo.stargazers_count}`}\n                      </p>\n                    </div>\n                  </div>\n                </div>\n              </button>\n            </div>\n          ))\n          }\n        </div>\n      </div>\n    </>\n  );\n};\n\nRepoList.propTypes = {\n  repos: PropTypes.arrayOf(\n    PropTypes.object.isRequired,\n  ).isRequired,\n  userLogin: PropTypes.string.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport { request } from '../api';\nimport { RepoList } from '../RepoList/RepoList';\nimport \"./UserDetails.css\";\n\nexport const UserDetails = ({\n  userLogin,\n  isUserSelected,\n  hideUserDetails,\n}) => {\n  const [user, setUser] = useState(null);\n  const [repos, setRepos] = useState([]);\n\n  useEffect(() => {\n    const loadUser = async() => {\n      const loadedUser = await request(`/users/${userLogin}`);\n      const loadedRepos = await request(`/users/${userLogin}/repos`);\n      setUser(loadedUser);\n      setRepos(loadedRepos);\n\n    };\n\n    loadUser();\n  }, [userLogin]);\n\n  if (!repos.length) {\n    return null;\n  }\n\n    return (\n      <>\n        {!isUserSelected\n          ? null\n          : (\n            <>\n              <div className=\"container details\">\n                  <div className=\"row no-gutters\">\n                    <div className=\"col-md-4\">\n                      <img\n                        src={user.avatar_url}\n                        className=\"card-img\"\n                        alt=\"avatar\"\n                      />\n                    </div>\n                    <div className=\"col-md-8\">\n                      <div className=\"card-body\">\n                        <h5 className=\"card-title\">{user.login}</h5>\n                        <p className=\"card-text\">\n                          {user.email && `email: ${user.email}`}\n                        </p>\n                        <p className=\"card-text\">\n                          {user.location && `location: ${user.location}`}\n                        </p>\n                        <p className=\"card-text\">\n                          {user.created_at\n                          && `Join Date: ${user.created_at.slice(0, 10)}`}\n                        </p>\n                        <p className=\"card-text\">\n                          {user.followers && `${user.followers} Followers`}\n                        </p>\n                        <p className=\"card-text\">\n                          {user.location && `Following ${user.following}`}\n                        </p>\n                        <div>\n                          <p className=\"card-text\">\n                            <small className=\"text-muted\">\n                              {user.bio && `User's biography: ${user.bio}`}\n                            </small>\n                          </p>\n                          <button\n                            type=\"button\"\n                            className=\"btn btn-danger\"\n                            onClick={hideUserDetails}\n                          >\n                            Hide Details\n                          </button>\n                        </div>\n                      </div>\n                  </div>\n                </div>\n              </div>\n              <div>\n                <RepoList\n                  repos={repos}\n                  userLogin={userLogin}\n                  isUserSelected={isUserSelected}\n                />\n              </div>\n            </>\n          )\n        }\n      </>\n    );\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { request } from './api';\n\nexport const RepoCount = ({ name }) => {\n  const [user, setUser] = useState({});\n\n  useEffect(() => {\n    const loadUser = async() => {\n        const getUser = await request(`/users/${name}`);\n\n        setUser(getUser);\n    }\n\n    loadUser();\n  }, [name]);\n\n  return (\n    <>\n      Repos: {user.public_repos}\n    </>\n  );\n};\n\nRepoCount.propTypes = {\n  name: PropTypes.string.isRequired,\n};\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { RepoCount } from '../RepoCount';\nimport \"./UsersList.css\";\n\nexport const UsersList = ({\n  users,\n  selectUser,\n  hideUserDetails,\n}) => {\n  const [queryUser, setInputUser] = useState('');\n  const filteredUsers = users.filter(user => user.login.includes(queryUser));\n  const handleQueryUser = (event) => {\n    setInputUser(event.target.value);\n    hideUserDetails();\n  };\n\n  return (\n    <>\n      <input\n        type=\"text\"\n        className=\"form-control input\"\n        name=\"queryUser\"\n        placeholder=\"Search for Users\"\n        value={queryUser}\n        onChange={handleQueryUser}\n        aria-label=\"Recipient's username\"\n        aria-describedby=\"basic-addon2\"\n      />\n      <div class=\"row\">\n        <div class=\"col-sm-12\">\n          {filteredUsers.map(user => (\n            <div class=\"card mb-3\">\n              <div class=\"row g-0\">\n                <div class=\"col-md-3\">\n                  <img src={user.avatar_url} class=\"img-fluid rounded-start\" alt=\"avatar\"></img>\n                </div>\n                <div class=\"col-md-8\">\n                  <div class=\"card-body\">\n                    <h5 class=\"card-title\">{user.login}</h5>\n                      <p class=\"card-text\">\n                        <RepoCount name={user.login} />\n                      </p>\n                      <button class=\"btn btn-primary\" onClick={() => selectUser(user.login)}>Details</button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </>\n  );\n};\n\nUsersList.propTypes = {\n  users: PropTypes.arrayOf(\n    PropTypes.object.isRequired,\n  ).isRequired,\n  selectUser: PropTypes.func.isRequired,\n  hideUserDetails: PropTypes.func.isRequired,\n  isUserSelected: PropTypes.bool.isRequired,\n};\n","import React, { useEffect, useState } from 'react';\nimport { request } from './components/api';\nimport './App.css';\nimport { UserDetails } from './components/UserDetails/UserDetails';\nimport { UsersList } from './components/UsersList/UsersList';\n\nconst App = () => {\n  const [users, setUsers] = useState([]);\n  const [userLogin, setUserLogin] = useState('');\n  const [isUserSelected, setUserSelected] = useState(false);\n\n  useEffect(() => {\n    const getUsers = async() => {\n        const loadedUsers = await request('/users');\n        setUsers(loadedUsers);\n    };\n    getUsers();\n  }, []);\n\n  const selectUser = (userLogin) => {\n    setUserLogin(userLogin);\n    setUserSelected(true);\n  };\n\n  const hideUserDetails = () => {\n    setUserLogin('');\n    setUserSelected(false);\n  };\n\n  return (\n    <div className=\"app container\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <h1>Users list</h1>\n          {!users.length\n            ? (\n              <div class=\"d-flex align-items-center\">\n                <strong>Loading...</strong>\n                <div class=\"spinner-border ms-auto\" role=\"status\" aria-hidden=\"true\"></div>\n              </div>\n            )\n            : (\n              <UsersList\n                users={users}\n                selectUser={selectUser}\n                hideUserDetails={hideUserDetails}\n              />\n            )}\n          </div>\n          <div className=\"col\">\n            {!isUserSelected\n              ? null\n              : (\n                <UserDetails\n                  userLogin={userLogin}\n                  isUserSelected={isUserSelected}\n                  hideUserDetails={hideUserDetails}\n                />\n              )}\n          </div>\n        </div>\n      </div>\n    );\n  };\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}